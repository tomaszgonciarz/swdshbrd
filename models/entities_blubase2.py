# coding: utf-8
from sqlalchemy import Column, DECIMAL, Date, DateTime, Index, String, Text, text
from sqlalchemy.dialects.mysql import BIGINT, INTEGER, SMALLINT, TINYINT
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()
metadata = Base.metadata


class Account(Base):
    __tablename__ = 'accounts'

    id = Column(INTEGER(11), primary_key=True)
    name = Column(String(255, 'utf8_unicode_ci'))
    account_type = Column(String(255, 'utf8_unicode_ci'))
    website = Column(String(255, 'utf8_unicode_ci'))
    email = Column(String(255, 'utf8_unicode_ci'))
    country = Column(String(255, 'utf8_unicode_ci'))
    city = Column(String(255, 'utf8_unicode_ci'))
    phone = Column(String(255, 'utf8_unicode_ci'))
    address_1 = Column(String(255, 'utf8_unicode_ci'))
    partner_account_id = Column(INTEGER(11), index=True)
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    time_zone = Column(String(255, 'utf8_unicode_ci'))
    mac_hashing = Column(String(10, 'utf8_unicode_ci'), nullable=False, server_default=text("'none'"))
    map_api_key = Column(String(255, 'utf8_unicode_ci'))
    permissions = Column(INTEGER(11))
    detections_lifetime = Column(INTEGER(11))
    main_location_id = Column(INTEGER(11))
    page_logo_file_name = Column(String(255, 'utf8_unicode_ci'))
    page_logo_content_type = Column(String(255, 'utf8_unicode_ci'))
    page_logo_file_size = Column(INTEGER(11))
    page_logo_updated_at = Column(DateTime)
    page_logo_color = Column(String(255, 'utf8_unicode_ci'))
    page_title = Column(String(255, 'utf8_unicode_ci'))
    page_footer = Column(String(255, 'utf8_unicode_ci'))
    additional_language = Column(String(255, 'utf8_unicode_ci'))
    dashboard_area = Column(INTEGER(11))
    group_location_id = Column(INTEGER(11))
    smtp_user_name = Column(String(255, 'utf8_unicode_ci'))
    smtp_password = Column(String(255, 'utf8_unicode_ci'))
    smtp_authentication = Column(String(255, 'utf8_unicode_ci'))
    smtp_address = Column(String(255, 'utf8_unicode_ci'))
    smtp_port = Column(INTEGER(11))
    smtp_starttls_auto = Column(TINYINT(1))
    smtp_domain = Column(String(255, 'utf8_unicode_ci'))
    smtp_ssl = Column(TINYINT(1))
    smtp_openssl_verify_mode = Column(String(255, 'utf8_unicode_ci'))
    domain = Column(String(255, 'utf8_unicode_ci'))
    stripe_secret = Column(String(255, 'utf8_unicode_ci'))
    stripe_amount_cents = Column(INTEGER(11))
    stripe_currency = Column(String(255, 'utf8_unicode_ci'))
    stripe_recharge = Column(INTEGER(11))
    fax = Column(String(255, 'utf8_unicode_ci'))
    address_2 = Column(String(255, 'utf8_unicode_ci'))
    postcode = Column(String(255, 'utf8_unicode_ci'))
    state = Column(String(255, 'utf8_unicode_ci'))
    country_code = Column(String(255, 'utf8_unicode_ci'))


class Diagnostic(Base):
    __tablename__ = 'diagnostics'
    __table_args__ = (
        Index('index_diagnostics_on_sensor_id_and_timestamp', 'sensor_id', 'timestamp'),
    )

    id = Column(INTEGER(11), primary_key=True)
    sensor_id = Column(INTEGER(11), index=True)
    restart_at = Column(DateTime)
    free_space = Column(INTEGER(11))
    time_zone = Column(String(255, 'utf8_unicode_ci'))
    request_from_ip = Column(String(255, 'utf8_unicode_ci'))
    timestamp = Column(DateTime)
    free_memory = Column(INTEGER(11))
    total_memory = Column(INTEGER(11))
    total_space = Column(INTEGER(11))
    free_ramdisk = Column(INTEGER(11))
    total_ramdisk = Column(INTEGER(11))
    latency = Column(DECIMAL(8, 2))
    git_branch = Column(String(255, 'utf8_unicode_ci'))
    git_commit = Column(String(255, 'utf8_unicode_ci'))


class HeartbeatDiagnostic(Base):
    __tablename__ = 'heartbeat_diagnostics'
    __table_args__ = (
        Index('index_heartbeat_diagnostics_on_sensor_id_and_day', 'sensor_id', 'day', unique=True),
    )

    id = Column(INTEGER(11), primary_key=True)
    sensor_id = Column(INTEGER(11), nullable=False)
    day = Column(Date, nullable=False)
    heartbeat_count = Column(INTEGER(11), nullable=False)
    first_timestamp = Column(DateTime, nullable=False)
    last_timestamp = Column(DateTime, nullable=False)


class InactivityAlert(Base):
    __tablename__ = 'inactivity_alerts'

    id = Column(INTEGER(11), primary_key=True)
    enabled = Column(TINYINT(1), nullable=False, server_default=text("1"))
    last_sent = Column(DateTime)
    interval = Column(INTEGER(11), nullable=False, server_default=text("900"))
    alert_type = Column(INTEGER(11), nullable=False)
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    location_id = Column(INTEGER(11), nullable=False, index=True)


class Installation(Base):
    __tablename__ = 'installations'

    id = Column(INTEGER(11), primary_key=True)
    sensor_id = Column(INTEGER(11), index=True)
    location_id = Column(INTEGER(11), index=True)
    comment = Column(String(255, 'utf8_unicode_ci'))
    installed_at = Column(DateTime)
    updated_at = Column(DateTime)
    removed_at = Column(DateTime)


class Location(Base):
    __tablename__ = 'locations'

    id = Column(INTEGER(11), primary_key=True)
    name = Column(String(255, 'utf8_unicode_ci'))
    lon = Column(DECIMAL(10, 7))
    floor = Column(TINYINT(4))
    time_zone = Column(String(255, 'utf8_unicode_ci'))
    location_id = Column(INTEGER(11), index=True)
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    deleted_at = Column(DateTime)
    mac_hashing = Column(String(10, 'utf8_unicode_ci'))
    config_updated_at = Column(DateTime)
    account_id = Column(INTEGER(11))
    lat = Column(DECIMAL(10, 7))
    shift = Column(Date)
    has_open_hours = Column(TINYINT(1), nullable=False, server_default=text("0"))
    bluetooth_enabled = Column(TINYINT(1))
    wifi_mode = Column(TINYINT(4))
    ssid = Column(String(255, 'utf8_unicode_ci'))
    channel = Column(INTEGER(11))
    wifi_password = Column(String(255, 'utf8_unicode_ci'))
    redirection_url = Column(String(255, 'utf8_unicode_ci'))
    weather_subscription_id = Column(INTEGER(11))
    continuity = Column(SMALLINT(6))
    visits_enabled = Column(TINYINT(1))
    bluetooth_scan_interval = Column(INTEGER(11))
    mac_history_size = Column(INTEGER(11))
    echo_scan_enabled = Column(TINYINT(1))
    filter_strength = Column(TINYINT(4))
    ap_hidden = Column(TINYINT(4))
    ht_mode = Column(String(255, 'utf8_unicode_ci'))
    package_types = Column(TINYINT(4))
    aggregation = Column(INTEGER(11), nullable=False, server_default=text("0"))
    is_root = Column(TINYINT(1), nullable=False, server_default=text("0"))
    location_type = Column(INTEGER(11), nullable=False, server_default=text("0"))
    company_file_name = Column(String(255, 'utf8_unicode_ci'))
    company_content_type = Column(String(255, 'utf8_unicode_ci'))
    company_file_size = Column(INTEGER(11))
    company_updated_at = Column(DateTime)
    radius = Column(INTEGER(11), nullable=False, server_default=text("0"))
    ibeacon_id = Column(INTEGER(11))
    installation_type = Column(String(255, 'utf8_unicode_ci'), nullable=False, server_default=text("'inside'"))
    address_1 = Column(String(255, 'utf8_unicode_ci'))
    address_2 = Column(String(255, 'utf8_unicode_ci'))
    fb_profile = Column(String(255, 'utf8_unicode_ci'))
    fb_id = Column(BIGINT(20))
    migrated_at = Column(DateTime)
    image_map_file_name = Column(String(255, 'utf8_unicode_ci'))
    image_map_content_type = Column(String(255, 'utf8_unicode_ci'))
    image_map_file_size = Column(INTEGER(11))
    image_map_updated_at = Column(DateTime)
    aggregate_from = Column(DateTime)
    router_scan = Column(TINYINT(1))
    image_map_real_width = Column(DECIMAL(6, 1), nullable=False)
    router_branch = Column(String(255, 'utf8_unicode_ci'))
    eddystone_beacon_id = Column(INTEGER(11))
    hotspot_id = Column(INTEGER(11))
    use_all_detections = Column(TINYINT(1))
    inside_aggregated = Column(DateTime)
    live = Column(TINYINT(1))
    recovered_up_to = Column(DateTime)
    scheduled_recovery = Column(DateTime)
    switch_bridge = Column(String(255, 'utf8_unicode_ci'))
    share_hotspot_users = Column(INTEGER(11))
    validate_inside_from = Column(DateTime)
    validate_outside_from = Column(DateTime)
    phone = Column(String(255, 'utf8_unicode_ci'))
    fax = Column(String(255, 'utf8_unicode_ci'))
    email = Column(String(255, 'utf8_unicode_ci'))
    city = Column(String(255, 'utf8_unicode_ci'))
    postcode = Column(String(255, 'utf8_unicode_ci'))
    state = Column(String(255, 'utf8_unicode_ci'))
    person_responsible = Column(String(255, 'utf8_unicode_ci'))
    country = Column(String(255, 'utf8_unicode_ci'))
    country_code = Column(String(255, 'utf8_unicode_ci'))
    splash_login_page_name = Column(String(255, 'utf8_unicode_ci'))
    splash_venue_logo_file_name = Column(String(255, 'utf8_unicode_ci'))
    splash_venue_logo_content_type = Column(String(255, 'utf8_unicode_ci'))
    splash_venue_logo_file_size = Column(INTEGER(11))
    splash_venue_logo_updated_at = Column(DateTime)
    splash_default_language = Column(String(255, 'utf8_unicode_ci'))
    splash_redirect_url = Column(String(1000, 'utf8_unicode_ci'))
    splash_css_customization = Column(Text(collation='utf8_unicode_ci'))
    splash_js_customization = Column(Text(collation='utf8_unicode_ci'))
    splash_force_timeout_seconds = Column(INTEGER(11))
    splash_force_idle_seconds = Column(INTEGER(11))
    splash_auth_methods_bitmask = Column(INTEGER(11))
    splash_hardcoded_password = Column(String(255, 'utf8_unicode_ci'))
    splash_hide_one_click_login_after_hours = Column(INTEGER(11))
    splash_facebook_app_id = Column(String(255, 'utf8_unicode_ci'))
    splash_facebook_app_secret = Column(String(1023, 'utf8_unicode_ci'))
    splash_facebook_use_like = Column(TINYINT(1))
    splash_facebook_like_skiptime_seconds = Column(INTEGER(11))
    splash_facebook_use_checkin = Column(TINYINT(1))
    splash_facebook_checkin_skiptime_seconds = Column(INTEGER(11))
    splash_facebook_checkin_page = Column(String(255, 'utf8_unicode_ci'))
    splash_facebook_checkin_text = Column(Text(collation='utf8_unicode_ci'))
    splash_facebook_like_page = Column(String(255, 'utf8_unicode_ci'))
    splash_popup_content_new_user = Column(Text(collation='utf8_unicode_ci'))
    splash_popup_content_returning_user = Column(Text(collation='utf8_unicode_ci'))
    splash_popup_auto_close_timeout_seconds = Column(INTEGER(11))
    splash_popup_show_close_button_timeout_seconds = Column(INTEGER(11))
    splash_email_reply_address = Column(String(255, 'utf8_unicode_ci'))
    image_map_width = Column(INTEGER(11))
    image_map_height = Column(INTEGER(11))
    splash_popup_image_for_new_user_file_name = Column(String(255, 'utf8_unicode_ci'))
    splash_popup_image_for_new_user_content_type = Column(String(255, 'utf8_unicode_ci'))
    splash_popup_image_for_new_user_file_size = Column(INTEGER(11))
    splash_popup_image_for_new_user_updated_at = Column(DateTime)
    splash_popup_image_for_returning_user_file_name = Column(String(255, 'utf8_unicode_ci'))
    splash_popup_image_for_returning_user_content_type = Column(String(255, 'utf8_unicode_ci'))
    splash_popup_image_for_returning_user_file_size = Column(INTEGER(11))
    splash_popup_image_for_returning_user_updated_at = Column(DateTime)
    google_review_url = Column(String(1000, 'utf8_unicode_ci'))
    yelp_review_url = Column(String(1000, 'utf8_unicode_ci'))
    tripAdvisor_review_url = Column(String(1000, 'utf8_unicode_ci'))
    splash_server = Column(String(255, 'utf8_unicode_ci'))
    splash_network_rules = Column(String(255, 'utf8_unicode_ci'))
    mailjet_api_key = Column(String(255, 'utf8_unicode_ci'))
    mailjet_secret_key = Column(String(255, 'utf8_unicode_ci'))
    splash_static_server = Column(String(255, 'utf8_unicode_ci'))
    splash_api_server = Column(String(255, 'utf8_unicode_ci'))
    mail_sending_limit = Column(INTEGER(11))


class Sensor(Base):
    __tablename__ = 'sensors'

    id = Column(INTEGER(11), primary_key=True)
    eth = Column(BIGINT(20), index=True)
    wlan = Column(BIGINT(20), index=True)
    hci = Column(BIGINT(20))
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    account_id = Column(INTEGER(11), server_default=text("92"))
    last_connection = Column(DateTime)
    eth_ip = Column(String(255, 'utf8_unicode_ci'))
    vpn_ip = Column(String(255, 'utf8_unicode_ci'))
    server = Column(String(255, 'utf8_unicode_ci'))
    branch = Column(String(255, 'utf8_unicode_ci'), server_default=text("'swm2.5.7'"))
    hardware = Column(String(255, 'utf8_unicode_ci'))
    usb = Column(String(255, 'utf8_unicode_ci'))
    last_heartbeat = Column(DateTime)
